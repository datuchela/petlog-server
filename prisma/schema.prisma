// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider = "mysql"
  url = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}



model User {
  id Int @id @default(autoincrement())
  username String @unique
  email String @unique
  password String
  isAdmin Boolean @default(false)
  pets Pet[]
  reminders Reminder[]
  refreshTokens RefreshToken[]
}

model RefreshToken {
  token String @unique
  user User @relation(fields: [userId], references: [id])
  userId Int
}


// model Names{
//   name String @id @unique
//   count Int @default(1)
// }


model Date {
  date String @unique
  reminders Reminder[]
}


model Reminder {
  id Int @id @default(autoincrement())
  name String
  date Date @relation(fields: [upcoming], references: [date], onDelete: Cascade)
  upcoming String
  intervalValue Int
  intervalType Int
  pet Pet @relation(fields: [petId], references: [id], onDelete: Cascade)
  petId Int
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId Int
}

model Pet {
  id    Int     @id @default(autoincrement())
  name  String
  gender String 
  birthday String
  weight String?
  reminders Reminder[]
  owner User @relation(fields: [ownerId], references: [id], onDelete: Cascade)
  ownerId Int
  species Species @relation(fields: [speciesId], references: [id], onDelete: Cascade)
  speciesId Int
}


model Species {
  id Int @id @default(autoincrement())
  name String
  pets Pet[]
}
